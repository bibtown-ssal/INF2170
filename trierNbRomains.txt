;Ce programme permet d'entree une serie d'au plus 20 chiffre romains, de les triers en ordre
;croissant et de les afficher dans cet ordre
;(chaque chiffre romain possede au plus 15 characteres, a une valeur entre 1 et 3999 (inclusif)
;sinon ils ne seront pas pris en compte
;un chiffre romain non valide ne sera pas pris en compte non plus
;la saisie de plus de 20 lignes cause l'arret du programme 

;auteur: Charles Therien
;code permanent: THEC03029208
;courriel: therien.charles@courrier.uqam.ca
;cour: INF2170 gr 20
;Remis : 8 juillet 2018

NewLine:         .EQUATE     0x000A
Zero:            .EQUATE     0x0000
Un:              .EQUATE     0x0001
Deux:            .EQUATE     0x0002
tailleL:         .EQUATE     16
tailleT:         .EQUATE     20
valMax:          .EQUATE     3999
M:               .EQUATE     0x4D
D:               .EQUATE     0x44
C:               .EQUATE     0x43
L:               .EQUATE     0x4C
X:               .EQUATE     0x58
V:               .EQUATE     0x56
I:               .EQUATE     0x49

main:            STRO        msgInp,d
                 CALL        saisir
                 STRO        msgAffNT,d
                 CALL        afficher
                 CALL        trier
                 STRO        msgAffT,d
                 CALL        afficher
                 STOP


;saisir()        permet de saisir jusqu'a tailleT(20) ligne de tailleL-1(15) charactere
;si une ligne depasse tailleL character, cette ligne sera ignoree
;si on tente de saisir plus de tailleT(20) lignes, le programme affiche un message d'erreur et
;s'interrompt

char:            .EQUATE     0            ;#1c
nbChar:          .EQUATE     1            ;#2d
saisir:          SUBSP       3,i          ;reserve #nbChar #char
                 LDX         TabLine,d
                 LDA         Zero,i
                 STA         nbChar,s
While00:         CHARI       char,s       ;while((char != '\n' && nextChar != '\n') || nbLigne < 20){
                 LDBYTEA     char,s       ;   nextChar();
                 CPA         NewLine,i    ;   if(char = '\n'){    
                 BRNE        charIn       ;       nextLine(&nbChar);
                 CALL        nextLine     ;       if(X = 0){
                 CPX         Zero,i       ;           break;}
                 BREQ        finWh00      
                 BR          While00      ;   }else{
charIn:          STBYTEA     Zero,x       ;       string = string.append(char);    
                 LDA         nbChar,s
                 ADDA        Un,i         ;       nbChar++;
                 CPA         tailleL,i    ;       if(nbChar == tailleL){ 
                 BRNE        continu
                 CALL        restLine     ;           restLine(); 
                 BR          While00
continu:         STA         nbChar,s     ;       }else{
                 ADDX        Un,i         ;           X = X+1;
                 BR          While00      ;   }
finWh00:         RET3                     ;} depile #nbChar #char
         

;methode qui change de ligne (si nbChar >0) ou termine la saisie si nbChar == 0
;X est l'adresse suivante sur laquelle ecrire
;retourne X = 0 si la saisie doit se terminer, retourne A = 0 sinon

nbChar1:         .EQUATE     4            ;&nbChar
char1:           .EQUATE     0            ;#1c
nextLine:        SUBSP       1,i          ;empile #char1
                 LDA         nbChar1,s    ;if(nbChar1 != 0){
                 CPA         Zero,i       ;   
                 BREQ        finSaisi     ; 
                 LDA         Zero,i       ;
                 STBYTEA     Zero,x       ;   string.append('\x00');
                 STA         nbChar1,s    ;   nbChar = 0;
                 LDX         nbLigne,d    ;
                 ADDX        Un,i         ;   nbLigne++;
                 STX         nbLigne,d
                 CPX         tailleT,i    ;   if(nbLigne < 20){
                 BREQ        testFinS     ;       X = TabLine[nbLigne];    
                 ASLX                     ;       return;
                 LDX         TabLine,x    ;
                 BR          finNL        ;   }else{
testFinS:        CHARI       char1,s      ;       if(nextChar() != '\n'){ 
                 LDBYTEA         char1,s      ;           print(err);
                 CPA         NewLine,i
                 BREQ        finSaisi     ;            STOP; 
                 STRO        msgErr,d     ;   }
                 STOP                     ;}else{
finSaisi:        LDX         Zero,i       ;   X = 0;
finNL:           RET1                     ;   return;} depile #char1


;cette methode met compteur de char a 0, met le pointeur d'ecriture (X) au debut de la ligne
;et termine la lecture de la ligne
nbChar2:         .EQUATE     5            ;&nbChar
char2:           .EQUATE     0            ;var local #2d
restLine:        SUBSP       2,i          ;empile #char2
                 LDA         Zero,i       
                 STA         nbChar2,s    ;nbChar = 0;
                 STA         char2,s      ;char2 = 0; 
                 LDX         nbLigne,d
                 ASLX
                 LDX         TabLine,x    ;X = TabLine[nbLigne];
While03:         CHARI       char2,s      ;while(char2 != '\n'){
                 LDBYTEA         char2,s      ;   char2 = nextChar();   
                 CPA         NewLine,i    ;}
                 BRNE        While03
                 RET2                     ;depile #char2

;faite afficher le nombre de ligne indiquer par nbLigne a partir de TabLine
cptLigne:        .EQUATE     2            ;var local #2d
pntLigne:        .EQUATE     0            ;var local #2h
afficher:        SUBSP       4,i          ;empile #cptLigne #pntLigne 
                 LDA         Zero,i
                 STA         cptLigne,s   ;cptLigne = 0
                 LDX         cptLigne,s   
While01:         CPX         nbLigne,d    ;while(cptLigne != nbLigne){
                 BREQ        finAff       ;   X = TabLine[cptLigne];
                 ASLX                     ;
                 LDX         TabLine,x    ;   println(&X);
                 STX         pntLigne,s   ;
                 STRO        pntLigne,sf  ;   cptLigne++;
                 CHARO       NewLine,i
                 LDX         cptLigne,s   ;}
                 ADDX        Un,i         ;
                 STX         cptLigne,s   ;return;
                 BR          While01      ;
finAff:          RET4                     ;depile #cptLigne #pntLigne 


;trier tri le tableau TabLine du plus petit au plus grand nombre romain et retire les
;lignes non valides (en decrementant le compteur de ligne et placant les lignes non valide a la fin
;(ligne non valide recoivent 0x7FFF comme valeur de romain())
i:               .EQUATE     10           ;var local #2d
j:               .EQUATE     8            ;var local #2d
valeur1:         .EQUATE     6            ;var local #2d
valeur2:         .EQUATE     4            ;var local #2d
tampon:          .EQUATE     2            ;var local #2h
valeur:          .EQUATE     0            ;resultat romain #2d
trier:           SUBSP       12,i         ;empile #i #j #valeur1 #valeur2 #tampon #resultat
                 LDA         Zero,i       
                 STA         i,s;         ;i = 0;
                 LDA         nbLigne,d
                 SUBA        Un,i
                 STA         j,s          ;j = nbLigne-1;
While02:         LDA         j,s          ;while(j > 0){
                 BRLE        finWh02      ;   
While04:         LDX         i,s
                 CPX         j,s          ;   while(i < j){
                 BRGE        finWh04
                 ASLX        
                 LDX         TabLine,x    ;       X = &TabLine[i]
                 CALL        romain
                 LDA         valeur,s
                 STA         valeur1,s    ;       valeur1 = romain(X)
                 LDX         i,s
                 ADDX        Un,i
                 ASLX
                 LDX         TabLine,x    ;       X = &TabLine[i+1]
                 CALL        romain
                 LDA         valeur,s
                 STA         valeur2,s    ;       valeur2 = romain(X)
                 CPA         valeur1,s    ;       if(valeur2 < valeur1){
                 BRGE        nextComp 
                 LDX         i,s
                 ASLX        
                 LDX         TabLine,x    ;           X = &TabLine[i]
                 STX         tampon,s     ;           tampon = X
                 LDX         i,s
                 ADDX        Un,i 
                 ASLX
                 LDA         TabLine,x    ;           A = &TabLine[i+1]
                 LDX         i,s 
                 ASLX                     ;           X = i
                 STA         TabLine,x    ;           &TabLine[i] = &TabLine[i+1] 
                 ADDX        2,i
                 LDA         tampon,s     ;           &TabLine[i+1] = tampon
                 STA         TabLine,x    ;       }
nextComp:        LDA         i,s          ;   i++;
                 ADDA        Un,i         ;   }
                 STA         i,s
                 BR          While04      ;   j--;
finWh04:         LDA         j,s
                 SUBA        Un,i
                 STA         j,s
                 LDA         Zero,i       ;   i = 0;
                 STA         i,s
                 BR          While02      ;}
finWh02:         LDA         nbLigne,d    ; i = nbLigne-1;
                 SUBA        Un,i
                 STA         i,s
While05:         CPA         Zero,i       ;while(
                 BRLT        finWh05      ;       i >= 0 
                 LDX         i,s
                 ASLX        
                 LDX         TabLine,x    ;   
                 CALL        romain
                 LDA         valeur,s     
                 CPA         valMax,i
                 BRLE        finWh05      ;               && TabLine[i] > 3999){
                 LDA         nbLigne,d
                 SUBA        Un,i
                 STA         nbLigne,d    ;   nbLigne--;
                 LDA         i,s
                 SUBA        Un,i
                 STA         i,s          ;   i--;
                 BR          While05      ;}
finWh05:         ADDSP       12,i         ;depile #i #j #valeur1 #valeur2 #tampon #resultat
                 RET0




;traduit le chiffre romain pointe par X en nombre arabe
;retourne entre 1 et 3999 en A si le parametre est valide
;retourn 0x7FFF sinon
resultat:        .EQUATE     2            ;resultat #2d
romain:          LDA         Zero,i   
                 STA         resultat,s   ;resultat = 0
                 LDBYTEA     Zero,x       ;A = charAt(x)
millier:         CPA         M,i          ;if(A == 'M'){
                 BRNE        centD        ;   
                 LDBYTEA     Un,x         ;   A = charAt(x+1)
                 CPA         M,i          ;   if(A == 'M'){
                 BRNE        m1           ;       
                 LDBYTEA     Deux,x       ;       A = charAt(x+2)
                 CPA         M,i          ;       if(A == 'M'){
                 BRNE        m2           ;           resultat += 3000
m3:              LDA         resultat,s   ;           x += 3
                 ADDA        3000,i       ;       }else{
                 STA         resultat,s   ;           resultat += 2000
                 ADDX        3,i          ;           x += 2
                 BR          centD        ;       }       
m2:              LDA         resultat,s   ;   }else{   
                 ADDA        2000,i       ;       resultat += 1000
                 STA         resultat,s   ;       x++
                 ADDX        2,i          ; }
                 BR          centD        ;}
m1:              LDA         resultat,s
                 ADDA        1000,i
                 STA         resultat,s
                 ADDX        1,i
                 BR          centD        ;A = charAt(x)
centD:           LDA         Zero,i       ;if(A == 'D'){
                 LDBYTEA     Zero,x       ;   A = charAt(x+1)   
                 CPA         D,i          ;   if(A == 'C'){
                 BRNE        centC        ;       A = charAt(x+2)
                 LDBYTEA     Un,x         ;       if(A == 'C'){
                 CPA         C,i          ;           A = charAt(x+3)
                 BRNE        c5           ;           if(A == 'C'){
                 LDBYTEA     Deux,x       ;               resultat += 800
                 CPA         C,i          ;               x += 4 
                 BRNE        c6           ;           }else{
                 LDBYTEA     3,x          ;               resultat += 700
                 CPA         C,i          ;               x += 3
                 BRNE        c7           ;           }
                 BR          c8           ;       }else{
                                          ;           resultat += 600
centC:           CPA         C,i          ;           x += 2
                 BRNE        dixL         ;       }
                 LDBYTEA     Un,x         ;   }else{
                 CPA         M,i          ;       resultat += 500
                 BREQ        c9           ;       x ++;
                 CPA         D,i          ;}else if( A == 'C'){
                 BREQ        c4           ;   A = charAt(x+1)
                 CPA         C,i          ;   if(A == 'M'){
                 BRNE        c1           ;       resultat += 900
                 LDBYTEA     Deux,x       ;       x += 2
                 CPA         C,i          ;   }else{
                 BRNE        c2           ;       if(A == 'C'){
                 BR          c3           ;           A = charAt(x+2)
                                          ;           if(A == 'C'){
c9:              LDA         resultat,s   ;               resultat += 300
                 ADDA        900,i        ;               x += 3
                 STA         resultat,s   ;           }else{    
                 ADDX        2,i          ;               resultat += 200
                 BR          dixL         ;               x += 2
c8:              LDA         resultat,s   ;           }
                 ADDA        800,i        ;       }else{
                 STA         resultat,s   ;           resultat += 100
                 ADDX        4,i          ;           x++ 
                 BR          dixL         ;       }
c7:              LDA         resultat,s   ;}
                 ADDA        700,i
                 STA         resultat,s
                 ADDX        3,i
                 BR          dixL
c6:              LDA         resultat,s
                 ADDA        600,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          dixL
c5:              LDA         resultat,s
                 ADDA        500,i
                 STA         resultat,s
                 ADDX        1,i
                 BR          dixL
c4:              LDA         resultat,s
                 ADDA        400,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          dixL
c3:              LDA         resultat,s
                 ADDA        300,i
                 STA         resultat,s
                 ADDX        3,i
                 BR          dixL
c2:              LDA         resultat,s
                 ADDA        200,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          dixL
c1:              LDA         resultat,s
                 ADDA        100,i
                 STA         resultat,s
                 ADDX        1,i
                 BR          dixL

dixL:            LDA         Zero,i       ;A = charAt(x)
                 LDBYTEA     Zero,x       ;if(A == 'L'){
                 CPA         L,i          ;   A = charAt(x+1) 
                 BRNE        dixX         ;   if(A == 'X'){
                 LDBYTEA     Un,x         ;       A = charAt(x+2)
                 CPA         X,i          ;       if(A == 'X'){
                 BRNE        d5           ;           A = charAt(x+3)
                 LDBYTEA     Deux,x       ;           if(A == 'X'){
                 CPA         X,i          ;               resultat += 80
                 BRNE        d6           ;               x += 4
                 LDBYTEA     3,x          ;           }else{
                 CPA         X,i          ;               resultat += 70
                 BRNE        d7           ;               x += 3
                 BR          d8           ;           }
dixX:            CPA         X,i          ;       }else{
                 BRNE        unV          ;           resultat += 60
                 LDBYTEA     Un,x         ;           x += 2
                 CPA         C,i          ;       }
                 BREQ        d9           ;   }else{
                 CPA         L,i          ;       resultat += 50
                 BREQ        d4           ;       x ++;
                 CPA         X,i          ;}else if( A == 'X'){
                 BRNE        d1           ;   A = charAt(x+1)
                 LDBYTEA     Deux,x       ;   if(A == 'C'){
                 CPA         X,i          ;       resultat += 90
                 BRNE        d2           ;       x += 2
                 BR          d3           ;   }else{
                                          ;       if(A == 'X'){
d1:              LDA         resultat,s   ;           A = charAt(x+2)
                 ADDA        10,i         ;           if(A == 'X'){
                 STA         resultat,s   ;               resultat += 30
                 ADDX        1,i          ;               x += 3
                 BR          unV          ;           }else{
d2:              LDA         resultat,s   ;               resultat += 20
                 ADDA        20,i         ;               x += 2
                 STA         resultat,s   ;           }
                 ADDX        2,i          ;       }else{
                 BR          unV          ;           resultat += 10
d3:              LDA         resultat,s   ;           x++
                 ADDA        30,i         ;       }
                 STA         resultat,s   ;}
                 ADDX        3,i
                 BR          unV
d4:              LDA         resultat,s
                 ADDA        40,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          unV
d5:              LDA         resultat,s
                 ADDA        50,i
                 STA         resultat,s
                 ADDX        1,i
                 BR          unV
d6:              LDA         resultat,s
                 ADDA        60,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          unV
d7:              LDA         resultat,s
                 ADDA        70,i
                 STA         resultat,s
                 ADDX        3,i
                 BR          unV
d8:              LDA         resultat,s
                 ADDA        80,i
                 STA         resultat,s
                 ADDX        4,i
                 BR          unV
d9:              LDA         resultat,s
                 ADDA        90,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          unV

unV:             LDA         Zero,i       ;A = charAt(x)
                 LDBYTEA     Zero,x       ;if(A == 'V'){
                 CPA         V,i          ;   A = charAt(x+1)  
                 BRNE        unI          ;   if(A == 'I'){
                 LDBYTEA     Un,x         ;       A = charAt(x+2)
                 CPA         I,i          ;       if(A == 'I'){
                 BRNE        u5           ;           A = charAt(x+3)
                 LDBYTEA     Deux,x       ;           if(A == 'I'){
                 CPA         I,i          ;               resultat += 8
                 BRNE        u6           ;               x += 4
                 LDBYTEA     3,x          ;           }else{
                 CPA         I,i          ;               resultat += 7
                 BRNE        u7           ;               x += 3
                 BR          u8           ;           }
unI:             CPA         I,i          ;       }else{
                 BRNE        finSTR       ;           resultat += 6
                 LDBYTEA     Un,x         ;           x += 2
                 CPA         X,i          ;       }
                 BREQ        u9           ;   }else{
                 CPA         V,i          ;       resultat += 5
                 BREQ        u4           ;       x ++;
                 CPA         I,i          ;}else if( A == 'I'){
                 BRNE        u1           ;   A = charAt(x+1)
                 LDBYTEA     Deux,x       ;   if(A == 'X'){
                 CPA         I,i          ;       resultat += 9
                 BRNE        u2           ;       x += 2
                 BR          u3           ;   }else{
                                          ;       if(A == 'I'){
u1:              LDA         resultat,s   ;           A = charAt(x+2)
                 ADDA        1,i          ;           if(A == 'I'){
                 STA         resultat,s   ;               resultat += 3
                 ADDX        1,i          ;               x += 3
                 BR          finSTR       ;           }else{ 
u2:              LDA         resultat,s   ;               resultat += 2
                 ADDA        2,i          ;               x += 2
                 STA         resultat,s   ;           }
                 ADDX        2,i          ;       }else{
                 BR          finSTR       ;           resultat += 1
u3:              LDA         resultat,s   ;           x++ 
                 ADDA        3,i          ;       }
                 STA         resultat,s   ;}
                 ADDX        3,i
                 BR          finSTR
u4:              LDA         resultat,s
                 ADDA        4,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          finSTR
u5:              LDA         resultat,s
                 ADDA        5,i
                 STA         resultat,s
                 ADDX        1,i
                 BR          finSTR
u6:              LDA         resultat,s
                 ADDA        6,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          finSTR
u7:              LDA         resultat,s
                 ADDA        7,i
                 STA         resultat,s
                 ADDX        3,i
                 BR          finSTR
u8:              LDA         resultat,s
                 ADDA        8,i
                 STA         resultat,s
                 ADDX        4,i
                 BR          finSTR
u9:              LDA         resultat,s
                 ADDA        9,i
                 STA         resultat,s
                 ADDX        2,i
                 BR          finSTR

finSTR:          LDA         Zero,i       ;A = charAt(x)
                 LDBYTEA     Zero,x       ;if(A != 0){
                 BREQ        finRome      ;   resultat = 0x7FF
                 LDA         0x7FFF,i     ;}
                 STA         resultat,s   ;return
finRome:         RET0




nbLigne:         .BLOCK      2 
TabLine:         .ADDRSS     ligne00 
                 .ADDRSS     ligne01
                 .ADDRSS     ligne02
                 .ADDRSS     ligne03
                 .ADDRSS     ligne04
                 .ADDRSS     ligne05
                 .ADDRSS     ligne06
                 .ADDRSS     ligne07
                 .ADDRSS     ligne08
                 .ADDRSS     ligne09
                 .ADDRSS     ligne10
                 .ADDRSS     ligne11
                 .ADDRSS     ligne12
                 .ADDRSS     ligne13
                 .ADDRSS     ligne14
                 .ADDRSS     ligne15
                 .ADDRSS     ligne16
                 .ADDRSS     ligne17
                 .ADDRSS     ligne18
                 .ADDRSS     ligne19

ligne00:         .BLOCK      16
ligne01:         .BLOCK      16
ligne02:         .BLOCK      16
ligne03:         .BLOCK      16
ligne04:         .BLOCK      16
ligne05:         .BLOCK      16
ligne06:         .BLOCK      16
ligne07:         .BLOCK      16
ligne08:         .BLOCK      16
ligne09:         .BLOCK      16
ligne10:         .BLOCK      16
ligne11:         .BLOCK      16
ligne12:         .BLOCK      16
ligne13:         .BLOCK      16
ligne14:         .BLOCK      16
ligne15:         .BLOCK      16
ligne16:         .BLOCK      16
ligne17:         .BLOCK      16
ligne18:         .BLOCK      16
ligne19:         .BLOCK      16
msgErr:          .ASCII      "Le programme ne supporte pas plus de 20 lignes. \x00"
msgInp:          .ASCII      "Le texte saisi:\n\x00"
msgAffNT:        .ASCII      "Fonction Affichage, donnees non triees:\n\x00"
msgAffT:         .ASCII      "Fonction Affichage, donnees triees:\n\x00"
                 .END